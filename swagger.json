{
  "openapi": "3.1.1",
  "info": {
    "title": "backend-LIBRA",
    "version": "2.2.1",
    "description": "A versão 2.2.1 inclui: \n- FIX: formatação e padronização da documentação. \n- ADD: nova rota de notificações e rotas \n- ADD: novas rotas de logout de user e de admin."
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Servidor local para ambiente de desenvolvimento"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Cadastro de usuário",
        "description": "Essa rota será responsável por cadastrar um novo usuário.",
        "tags": ["Auth"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "User Comum": {
                  "value": {
                    "name": "joao veloso",
                    "email": "emailteste@gmail.com",
                    "password": "senhateste123",
                    "isDisabled": false
                  }
                },
                "User Disabled": {
                  "value": {
                    "name": "joao veloso",
                    "email": "emailteste@gmail.com",
                    "password": "senhateste123",
                    "isDisabled": true,
                    "idDisabled": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login de usuário",
        "description": "Essa rota será responsável por autenticar um usuário.",
        "tags": ["Auth"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "User": {
                  "value": {
                    "email": "emailteste@gmail.com",
                    "password": "senhateste123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/login-admin": {
      "post": {
        "summary": "Login de admin",
        "description": "Essa rota será responsável por autenticar um administrador.",
        "tags": ["Auth"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Admin"
              },
              "examples": {
                "User": {
                  "value": {
                    "NIF": "123456",
                    "password": "senhateste123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/forgot-password": {
      "post": {
        "summary": "Solicitar redefinição de senha",
        "description": "Essa rota envia um e-mail com um link para redefinir a senha.",
        "tags": ["Auth"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                },
                "required": ["email"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "E-mail de redefinição enviado com sucesso."
          },
          "404": {
            "description": "Usuário não encontrado."
          }
        }
      }
    },
    "/auth/reset-password/{token}": {
      "post": {
        "summary": "Redefinir senha",
        "description": "Essa rota redefine a senha do usuário usando um token.",
        "tags": ["Auth"],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newPassword": {
                    "type": "string"
                  }
                },
                "required": ["newPassword"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Senha redefinida com sucesso."
          },
          "400": {
            "description": "Token inválido ou expirado."
          }
        }
      }
    },
    "/auth/logout-user": {
      "post": {
        "summary": "Logout de usuário",
        "description": "Essa rota invalida o token do usuário, realizando o logout.",
        "tags": ["Auth"],
        "responses": {
          "200": {
            "description": "Logout realizado com sucesso."
          },
          "401": {
            "description": "Token inválido ou expirado."
          }
        }
      }
    },
    "/auth/logout-admin": {
      "post": {
        "summary": "Logout de admin",
        "description": "Essa rota invalida o token do admin, realizando o logout.",
        "tags": ["Auth"],
        "responses": {
          "200": {
            "description": "Logout realizado com sucesso."
          },
          "401": {
            "description": "Token inválido ou expirado."
          }
        }
      }
    },
    "/admin": {
      "post": {
        "summary": "Criar um administrador",
        "description": "Essa rota cria um novo administrador.",
        "tags": ["Admin"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Admin"
              },
              "examples": {
                "Admin": {
                  "value": {
                    "name": "Admin",
                    "email": "admin@gmail.com",
                    "password": "admin"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Administrador criado com sucesso."
          }
        }
      },
      "get": {
        "summary": "Listar todos os administradores",
        "description": "Essa rota retorna todos os administradores cadastrados.",
        "tags": ["Admin"],
        "responses": {
          "200": {
            "description": "Lista de administradores encontrada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Admin"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Nenhum administrador encontrado."
          }
        }
      }
    },
    "/admin/{id}": {
      "get": {
        "summary": "Buscar um administrador pelo ID",
        "description": "Essa rota retorna os detalhes de um administrador pelo ID.",
        "tags": ["Admin"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Administrador encontrado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Admin"
                }
              }
            }
          },
          "404": {
            "description": "Administrador não encontrado."
          }
        }
      },
      "delete": {
        "summary": "Excluir um administrador",
        "description": "Essa rota exclui um administrador pelo ID.",
        "tags": ["Admin"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Administrador excluído com sucesso."
          },
          "404": {
            "description": "Administrador não encontrado."
          }
        }
      },
      "patch": {
        "summary": "Atualizar o email de um administrador",
        "description": "Essa rota atualiza o email de um administrador pelo ID.",
        "tags": ["Admin"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                },
                "required": ["email"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email do administrador atualizado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Admin"
                }
              }
            }
          },
          "400": {
            "description": "Email inválido ou já em uso."
          },
          "404": {
            "description": "Administrador não encontrado."
          }
        }
      }
    },
    "/admin/image/{id}": {
      "post": {
        "summary": "Adicionar imagem de perfil a um admin",
        "description": "Essa rota permite adicionar uma imagem de perfil a um admin já existente.",
        "tags": ["Admin"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID do admin que receberá a imagem."
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "imagemPerfil": {
                    "type": "string",
                    "format": "binary",
                    "description": "Arquivo de imagem (formatos suportados: JPEG, PNG)."
                  }
                },
                "required": ["imagemPerfil"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Imagem de perfil adicionada com sucesso."
          },
          "400": {
            "description": "Arquivo inválido ou não enviado."
          },
          "404": {
            "description": "Admin não encontrado."
          }
        }
      },
      "put": {
        "summary": "Atualizar a imagem de perfil de um admin",
        "description": "Essa rota permite atualizar a imagem de perfil de um admin já existente.",
        "tags": ["Admin"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID do admin que terá a imagem atualizada."
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "imagemPerfil": {
                    "type": "string",
                    "format": "binary",
                    "description": "Arquivo de imagem (formatos suportados: JPEG, PNG)."
                  }
                },
                "required": ["imagemPerfil"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Imagem de perfil atualizada com sucesso."
          },
          "400": {
            "description": "Arquivo inválido ou não enviado."
          },
          "404": {
            "description": "Admin não encontrado ou não possui uma foto para atualizar."
          }
        }
      }
    },
    "/disableds": {
      "post": {
        "summary": "Criar uma deficiência",
        "description": "Essa rota cria uma nova deficiência no banco de dados.",
        "tags": ["Disabled"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Disabled"
              },
              "examples": {
                "Criar Pessoa com Deficiência": {
                  "value": {
                    "idDisabledTypes": 1,
                    "name": "Miopia"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Deficiência criada com sucesso no banco de dados."
          }
        }
      },
      "get": {
        "summary": "Listar todas as deficiências",
        "description": "Essa rota retorna todas as deficiências cadastradas.",
        "tags": ["Disabled"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de deficiências encontrada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Disabled"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/disableds/type/{id}": {
      "get": {
        "summary": "Buscar deficiências pelo tipo",
        "description": "Essa rota retorna as deficiências por tipo.",
        "tags": ["Disabled"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deficiências encontradas com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Disabled"
                }
              }
            }
          },
          "404": {
            "description": "Deficiência não encontrada."
          }
        }
      }
    },
    "/disableds/{id}": {
      "get": {
        "summary": "Buscar uma deficiência pelo ID",
        "description": "Essa rota retorna os detalhes de uma deficiência pelo ID.",
        "tags": ["Disabled"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deficiência encontrada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Disabled"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Atualizar uma deficiência",
        "description": "Essa rota atualiza as informações de uma deficiência pelo ID.",
        "tags": ["Disabled"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Disabled"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Deficiência atualizada com sucesso."
          }
        }
      },
      "delete": {
        "summary": "Excluir uma deficiência",
        "description": "Essa rota exclui uma deficiência pelo ID.",
        "tags": ["Disabled"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deficiência excluída com sucesso."
          }
        }
      }
    },
    "/typesdisabled": {
      "post": {
        "summary": "Criar um tipo de deficiência",
        "description": "Essa rota cria um novo tipo de deficiência.",
        "tags": ["TypesDisabled"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TypesDisabled"
              },
              "examples": {
                "Criar Tipo de Deficiência": {
                  "value": {
                    "name": "Deficiência Visual"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tipo de deficiência criado com sucesso."
          }
        }
      },
      "get": {
        "summary": "Listar todos os tipos de deficiência",
        "description": "Essa rota retorna todos os tipos de deficiência cadastrados.",
        "tags": ["TypesDisabled"],
        "responses": {
          "200": {
            "description": "Lista de tipos de deficiência encontrada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TypesDisabled"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/typesdisabled/{name}": {
      "get": {
        "summary": "Buscar um tipo de deficiência pelo nome",
        "description": "Essa rota retorna os detalhes de um tipo de deficiência pelo nome.",
        "tags": ["TypesDisabled"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tipo de deficiência encontrado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TypesDisabled"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Atualizar um tipo de deficiência",
        "description": "Essa rota atualiza as informações de um tipo de deficiência pelo nome.",
        "tags": ["TypesDisabled"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TypesDisabled"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tipo de deficiência atualizado com sucesso."
          }
        }
      },
      "delete": {
        "summary": "Excluir um tipo de deficiência",
        "description": "Essa rota exclui um tipo de deficiência pelo nome.",
        "tags": ["TypesDisabled"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tipo de deficiência excluído com sucesso."
          }
        }
      }
    },
    "/users": {
      "post": {
        "summary": "Criar um usuário",
        "description": "Essa rota cria um novo usuário.",
        "tags": ["Users"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "Criar Usuário com Deficiência": {
                  "value": {
                    "name": "João Veloso",
                    "email": "emailteste@gmail.com",
                    "password": "senhateste123",
                    "isDisabled": true,
                    "idDisabled": 1,
                    "techAss": "Software Reader"
                  }
                },
                "Criar Usuário sem Deficiência": {
                  "value": {
                    "name": "João Veloso",
                    "email": "emailteste@gmail.com",
                    "password": "senhateste123",
                    "isDisabled": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuário criado com sucesso."
          }
        }
      },
      "get": {
        "summary": "Listar todos os usuários",
        "description": "Essa rota retorna todos os usuários cadastrados.",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "onlyDisabled",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de usuários encontrada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Buscar um usuário pelo ID",
        "description": "Essa rota retorna os detalhes de um usuário pelo ID.",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário encontrado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Atualizar um usuário",
        "description": "Essa rota atualiza as informações de um usuário pelo ID.",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usuário atualizado com sucesso."
          }
        }
      },
      "delete": {
        "summary": "Excluir um usuário",
        "description": "Essa rota exclui um usuário pelo ID.",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário excluído com sucesso."
          }
        }
      }
    },
    "/usersdisabled": {
      "post": {
        "summary": "Associar um usuário a uma deficiência",
        "description": "Essa rota associa um usuário a uma deficiência específica.",
        "tags": ["UsersDisabled"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDisabled"
              },
              "examples": {
                "Associar Usuário e Deficiência": {
                  "value": {
                    "idUser": 1,
                    "idDisabled": 2
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Associação criada com sucesso."
          }
        }
      },
      "get": {
        "summary": "Listar todas as associações entre usuários e deficiências",
        "description": "Essa rota retorna todas as associações entre usuários e deficiências cadastradas.",
        "tags": ["UsersDisabled"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de associações encontrada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDisabled"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/usersdisabled/{id}": {
      "get": {
        "summary": "Buscar uma associação pelo ID",
        "description": "Essa rota retorna os detalhes de uma associação pelo ID.",
        "tags": ["UsersDisabled"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Associação encontrada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDisabled"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Excluir uma associação",
        "description": "Essa rota exclui uma associação entre usuário e deficiência pelo ID.",
        "tags": ["UsersDisabled"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Associação excluída com sucesso."
          }
        }
      },
      "patch": {
        "summary": "Atualizar uma associação entre usuário e deficiência",
        "description": "Essa rota atualiza as informações de uma associação entre um usuário e uma deficiência.",
        "tags": ["UsersDisabled"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDisabled"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Associação atualizada com sucesso."
          }
        }
      }
    },
    "/notifications": {
      "post": {
        "summary": "Criar uma notificação",
        "description": "Essa rota cria uma nova notificação.",
        "tags": ["Notifications"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Título da notificação."
                  },
                  "description": {
                    "type": "string",
                    "description": "Descrição da notificação."
                  },
                  "type": {
                    "type": "string",
                    "description": "Tipo da notificação (ex: info, alerta, etc.)."
                  }
                },
                "required": ["title", "description", "type"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Notificação criada com sucesso."
          },
          "400": {
            "description": "Dados inválidos ou faltando."
          }
        }
      },
      "get": {
        "summary": "Listar todas as notificações",
        "description": "Essa rota retorna todas as notificações cadastradas.",
        "tags": ["Notifications"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de notificações encontrada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Notification"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notifications/{id}": {
      "delete": {
        "summary": "Excluir uma notificação",
        "description": "Essa rota exclui uma notificação pelo ID.",
        "tags": ["Notifications"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notificação excluída com sucesso."
          },
          "404": {
            "description": "Notificação não encontrada."
          }
        }
      }
    },
    "/requestedbooks": {
      "post": {
        "summary": "Criar um livro solicitado",
        "description": "Essa rota será responsável por criar um novo livro solicitado.",
        "tags": ["RequestedBooks"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestedBook"
              },
              "examples": {
                "RequestedBook": {
                  "value": {
                    "title": "Dom Quixote",
                    "description": "Um clássico da literatura espanhola.",
                    "gender": "Romance"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Livro solicitado criado com sucesso."
          },
          "400": {
            "description": "Erro de validação ou dados inválidos."
          },
          "500": {
            "description": "Erro interno no servidor."
          }
        }
      },
      "get": {
        "summary": "Listar todos os livros solicitados",
        "description": "Essa rota retorna todos os livros solicitados cadastrados.",
        "tags": ["RequestedBooks"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de livros solicitados encontrada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RequestedBook"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Nenhum livro solicitado encontrado."
          },
          "500": {
            "description": "Erro interno no servidor."
          }
        }
      }
    },
    "/requestedbooks/{id}": {
      "get": {
        "summary": "Buscar um livro solicitado pelo ID",
        "description": "Essa rota retorna os detalhes de um livro solicitado pelo ID.",
        "tags": ["RequestedBooks"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID do livro solicitado."
          }
        ],
        "responses": {
          "200": {
            "description": "Livro solicitado encontrado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestedBook"
                }
              }
            }
          },
          "404": {
            "description": "Livro solicitado não encontrado."
          },
          "500": {
            "description": "Erro interno no servidor."
          }
        }
      },
      "delete": {
        "summary": "Excluir um livro solicitado",
        "description": "Essa rota exclui um livro solicitado pelo ID.",
        "tags": ["RequestedBooks"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID do livro solicitado."
          }
        ],
        "responses": {
          "200": {
            "description": "Livro solicitado excluído com sucesso."
          },
          "404": {
            "description": "Livro solicitado não encontrado."
          },
          "500": {
            "description": "Erro interno no servidor."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User ": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "isDisabled": {
            "type": "boolean"
          },
          "idDisabled": {
            "type": "integer"
          },
          "techAss": {
            "type": "string"
          },
          "resetPasswordToken": {
            "type": "string"
          },
          "resetPasswordExpires": {
            "type": "string"
          }
        }
      },
      "Admin": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "NIF": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "Disabled": {
        "type": "object",
        "properties": {
          "idDisabledTypes": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "TypesDisabled": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "User Disabled": {
        "type": "object",
        "properties": {
          "idUser ": {
            "type": "integer"
          },
          "idDisabled": {
            "type": "integer"
          }
        }
      },
      "Notification": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "RequestedBook": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          }
        },
        "required": ["title", "description", "gender"]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}