{
  "openapi": "3.1.1",
  "info": {
    "title": "backend-LIBRA",
    "version": "3.2.0",
    "description": "A versão 3.2.0 inclui: \n- FIX: formatação e padronização da documentação. \n- ADD: novas rotas de atualizar as imagens de Eventos e Admins. \n- ADD: integração de Livros, Ebooks e Audiobooks na documentação."
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Servidor local para ambiente de desenvolvimento"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Cadastro de usuário",
        "description": "Essa rota será responsável por cadastrar um novo usuário.",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "User Comum": {
                  "value": {
                    "name": "joao veloso",
                    "email": "emailteste@gmail.com",
                    "password": "senhateste123",
                    "isDisabled": false
                  }
                },
                "User Disabled": {
                  "value": {
                    "name": "joao veloso",
                    "email": "emailteste@gmail.com",
                    "password": "senhateste123",
                    "isDisabled": true,
                    "idDisabled": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login de usuário",
        "description": "Essa rota será responsável por autenticar um usuário.",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "User": {
                  "value": {
                    "email": "emailteste@gmail.com",
                    "password": "senhateste123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/login-admin": {
      "post": {
        "summary": "Login de admin",
        "description": "Essa rota será responsável por autenticar um administrador.",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Admin"
              },
              "examples": {
                "User": {
                  "value": {
                    "NIF": "123456",
                    "password": "senhateste123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/forgot-password": {
      "post": {
        "summary": "Solicitar redefinição de senha",
        "description": "Essa rota envia um e-mail com um link para redefinir a senha.",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "E-mail de redefinição enviado com sucesso."
          },
          "404": {
            "description": "Usuário não encontrado."
          }
        }
      }
    },
    "/auth/reset-password/{token}": {
      "post": {
        "summary": "Redefinir senha",
        "description": "Essa rota redefine a senha do usuário usando um token.",
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newPassword": {
                    "type": "string"
                  }
                },
                "required": [
                  "newPassword"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Senha redefinida com sucesso."
          },
          "400": {
            "description": "Token inválido ou expirado."
          }
        }
      }
    },
    "/auth/logout-user": {
      "post": {
        "summary": "Logout de usuário",
        "description": "Essa rota invalida o token do usuário, realizando o logout.",
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "Logout realizado com sucesso."
          },
          "401": {
            "description": "Token inválido ou expirado."
          }
        }
      }
    },
    "/auth/logout-admin": {
      "post": {
        "summary": "Logout de admin",
        "description": "Essa rota invalida o token do admin, realizando o logout.",
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "Logout realizado com sucesso."
          },
          "401": {
            "description": "Token inválido ou expirado."
          }
        }
      }
    },
    "/admin": {
      "post": {
        "summary": "Criar um administrador",
        "description": "Essa rota cria um novo administrador com ou sem imagem de perfil.",
        "tags": [
          "Admin"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Nome completo do administrador."
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Endereço de e-mail do administrador."
                  },
                  "password": {
                    "type": "string",
                    "description": "Senha do administrador."
                  },
                  "imagemPerfil": {
                    "type": "string",
                    "format": "binary",
                    "description": "Arquivo de imagem de perfil (formatos suportados: JPEG, PNG)."
                  }
                },
                
                "required": [
                  "name",
                  "email",
                  "password",
                  "NIF"
                ]
              }
            }
            
          }
        },
        "responses": {
          "201": {
            "description": "Administrador criado com sucesso."
          },
          "400": {
            "description": "Dados inválidos ou faltando."
          },
          "500": {
            "description": "Erro interno no servidor."
          }
        }
      },
      "get": {
        "summary": "Listar todos os administradores",
        "description": "Essa rota retorna todos os administradores cadastrados.",
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "Lista de administradores encontrada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Admin"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Nenhum administrador encontrado."
          },
          "500": {
            "description": "Erro interno no servidor."
          }
        }
      }
    },
    "/admin/{id}": {
      "get": {
        "summary": "Buscar um administrador pelo ID",
        "description": "Essa rota retorna os detalhes de um administrador pelo ID.",
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Administrador encontrado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Admin"
                }
              }
            }
          },
          "404": {
            "description": "Administrador não encontrado."
          },
          "500": {
            "description": "Erro interno no servidor."
          }
        }
      },
      "patch": {
        "summary": "Atualizar um administrador",
        "description": "Essa rota atualiza as informações de um administrador pelo ID.",
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Nome completo do administrador."
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Endereço de e-mail do administrador."
                  },
                  "password": {
                    "type": "string",
                    "description": "Senha do administrador."
                  },
                  "NIF": {
                    "type": "string",
                    "description": "Número de Identificação Fiscal (NIF) do administrador."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Administrador atualizado com sucesso."
          },
          "400": {
            "description": "Dados inválidos ou faltando."
          },
          "404": {
            "description": "Administrador não encontrado."
          },
          "500": {
            "description": "Erro interno no servidor."
          }
        }
      },
      "delete": {
        "summary": "Excluir um administrador",
        "description": "Essa rota exclui um administrador pelo ID.",
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Administrador excluído com sucesso."
          },
          "404": {
            "description": "Administrador não encontrado."
          },
          "500": {
            "description": "Erro interno no servidor."
          }
        }
      }
    },
    "/admin/{id}/addpicture": {
      "post": {
        "summary": "Adicionar ou atualizar a imagem de perfil de um administrador",
        "description": "Essa rota permite adicionar ou atualizar a imagem de perfil de um administrador.",
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "imagemPerfil": {
                    "type": "string",
                    "format": "binary",
                    "description": "Arquivo de imagem de perfil (formatos suportados: JPEG, PNG)."
                  }
                },
                "required": [
                  "imagemPerfil"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Imagem de perfil adicionada ou atualizada com sucesso."
          },
          "400": {
            "description": "Arquivo inválido ou não enviado."
          },
          "404": {
            "description": "Administrador não encontrado."
          },
          "500": {
            "description": "Erro interno no servidor."
          }
        }
      }
    },
    "/disableds": {
      "post": {
        "summary": "Criar uma deficiência",
        "description": "Essa rota cria uma nova deficiência no banco de dados.",
        "tags": [
          "Disabled"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Disabled"
              },
              "examples": {
                "Criar Pessoa com Deficiência": {
                  "value": {
                    "idDisabledTypes": 1,
                    "name": "Miopia"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Deficiência criada com sucesso no banco de dados."
          },
          "400": {
            "description": "Dados inválidos ou faltando."
          }
        }
      },
      "get": {
        "summary": "Listar todas as deficiências",
        "description": "Essa rota retorna todas as deficiências cadastradas.",
        "tags": [
          "Disabled"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de deficiências encontrada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Disabled"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Nenhuma deficiência encontrada."
          }
        }
      }
    },
    "/disableds/{id}": {
      "get": {
        "summary": "Buscar uma deficiência pelo ID",
        "description": "Essa rota retorna os detalhes de uma deficiência pelo ID.",
        "tags": [
          "Disabled"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deficiência encontrada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Disabled"
                }
              }
            }
          },
          "404": {
            "description": "Deficiência não encontrada."
          }
        }
      },
      "put": {
        "summary": "Atualizar uma deficiência",
        "description": "Essa rota atualiza as informações de uma deficiência pelo ID.",
        "tags": [
          "Disabled"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Disabled"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Deficiência atualizada com sucesso."
          },
          "400": {
            "description": "Dados inválidos ou faltando."
          },
          "404": {
            "description": "Deficiência não encontrada."
          }
        }
      },
      "delete": {
        "summary": "Excluir uma deficiência",
        "description": "Essa rota exclui uma deficiência pelo ID.",
        "tags": [
          "Disabled"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deficiência excluída com sucesso."
          },
          "404": {
            "description": "Deficiência não encontrada."
          }
        }
      }
    },
    "/typesdisabled": {
      "post": {
        "summary": "Criar um tipo de deficiência",
        "description": "Essa rota cria um novo tipo de deficiência.",
        "tags": [
          "TypesDisabled"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TypesDisabled"
              },
              "examples": {
                "Criar Tipo de Deficiência": {
                  "value": {
                    "name": "Deficiência Visual"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tipo de deficiência criado com sucesso."
          },
          "400": {
            "description": "Dados inválidos ou faltando."
          }
        }
      },
      "get": {
        "summary": "Listar todos os tipos de deficiência",
        "description": "Essa rota retorna todos os tipos de deficiência cadastrados.",
        "tags": [
          "TypesDisabled"
        ],
        "responses": {
          "200": {
            "description": "Lista de tipos de deficiência encontrada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TypesDisabled"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Nenhum tipo de deficiência encontrado."
          }
        }
      }
    },
    "/typesdisabled/{name}": {
      "get": {
        "summary": "Buscar um tipo de deficiência pelo nome",
        "description": "Essa rota retorna os detalhes de um tipo de deficiência pelo nome.",
        "tags": [
          "TypesDisabled"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tipo de deficiência encontrado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TypesDisabled"
                }
              }
            }
          },
          "404": {
            "description": "Tipo de deficiência não encontrado."
          }
        }
      },
      "patch": {
        "summary": "Atualizar um tipo de deficiência",
        "description": "Essa rota atualiza as informações de um tipo de deficiência pelo nome.",
        "tags": [
          "TypesDisabled"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TypesDisabled"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tipo de deficiência atualizado com sucesso."
          },
          "400": {
            "description": "Dados inválidos ou faltando."
          },
          "404": {
            "description": "Tipo de deficiência não encontrado."
          }
        }
      },
      "delete": {
        "summary": "Excluir um tipo de deficiência",
        "description": "Essa rota exclui um tipo de deficiência pelo nome.",
        "tags": [
          "TypesDisabled"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tipo de deficiência excluído com sucesso."
          },
          "404": {
            "description": "Tipo de deficiência não encontrado."
          }
        }
      }
    },
    "/users": {
      "post": {
        "summary": "Criar um usuário",
        "description": "Essa rota cria um novo usuário.",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "Criar Usuário com Deficiência": {
                  "value": {
                    "name": "João Veloso",
                    "email": "emailteste@gmail.com",
                    "password": "senhateste123",
                    "isDisabled": true,
                    "idDisabled": 1,
                    "techAss": "Software Reader"
                  }
                },
                "Criar Usuário sem Deficiência": {
                  "value": {
                    "name": "João Veloso",
                    "email": "emailteste@gmail.com",
                    "password": "senhateste123",
                    "isDisabled": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuário criado com sucesso."
          },
          "400": {
            "description": "Dados inválidos ou faltando."
          }
        }
      },
      "get": {
        "summary": "Listar todos os usuários",
        "description": "Essa rota retorna todos os usuários cadastrados.",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "onlyDisabled",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de usuários encontrada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Nenhum usuário encontrado."
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Buscar um usuário pelo ID",
        "description": "Essa rota retorna os detalhes de um usuário pelo ID.",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário encontrado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "Usuário não encontrado."
          }
        }
      },
      "put": {
        "summary": "Atualizar um usuário",
        "description": "Essa rota atualiza as informações de um usuário pelo ID.",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usuário atualizado com sucesso."
          },
          "400": {
            "description": "Dados inválidos ou faltando."
          },
          "404": {
            "description": "Usuário não encontrado."
          }
        }
      },
      "delete": {
        "summary": "Excluir um usuário",
        "description": "Essa rota exclui um usuário pelo ID.",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário excluído com sucesso."
          },
          "404": {
            "description": "Usuário não encontrado."
          }
        }
      }
    },
    "/usersdisabled": {
      "post": {
        "summary": "Associar um usuário a uma deficiência",
        "description": "Essa rota associa um usuário a uma deficiência específica.",
        "tags": [
          "UsersDisabled"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDisabled"
              },
              "examples": {
                "Associar Usuário e Deficiência": {
                  "value": {
                    "idUser": 1,
                    "idDisabled": 2
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Associação criada com sucesso."
          },
          "400": {
            "description": "Dados inválidos ou faltando."
          }
        }
      },
      "get": {
        "summary": "Listar todas as associações entre usuários e deficiências",
        "description": "Essa rota retorna todas as associações entre usuários e deficiências cadastradas.",
        "tags": [
          "UsersDisabled"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de associações encontrada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDisabled"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Nenhuma associação encontrada."
          }
        }
      }
    },
    "/usersdisabled/{id}": {
      "get": {
        "summary": "Buscar uma associação pelo ID",
        "description": "Essa rota retorna os detalhes de uma associação pelo ID.",
        "tags": [
          "UsersDisabled"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Associação encontrada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDisabled"
                }
              }
            }
          },
          "404": {
            "description": "Associação não encontrada."
          }
        }
      },
      "delete": {
        "summary": "Excluir uma associação",
        "description": "Essa rota exclui uma associação entre usuário e deficiência pelo ID.",
        "tags": [
          "UsersDisabled"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Associação excluída com sucesso."
          },
          "404": {
            "description": "Associação não encontrada."
          }
        }
      },
      "patch": {
        "summary": "Atualizar uma associação entre usuário e deficiência",
        "description": "Essa rota atualiza as informações de uma associação entre um usuário e uma deficiência.",
        "tags": [
          "UsersDisabled"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDisabled"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Associação atualizada com sucesso."
          },
          "400": {
            "description": "Dados inválidos ou faltando."
          },
          "404": {
            "description": "Associação não encontrada."
          }
        }
      }
    },
    "/notifications": {
      "post": {
        "summary": "Criar uma notificação",
        "description": "Essa rota cria uma nova notificação.",
        "tags": [
          "Notifications"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Título da notificação."
                  },
                  "description": {
                    "type": "string",
                    "description": "Descrição da notificação."
                  },
                  "type": {
                    "type": "string",
                    "description": "Tipo da notificação (ex: info, alerta, etc.)."
                  }
                },
                "required": [
                  "title",
                  "description",
                  "type"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Notificação criada com sucesso."
          },
          "400": {
            "description": "Dados inválidos ou faltando."
          }
        }
      },
      "get": {
        "summary": "Listar todas as notificações",
        "description": "Essa rota retorna todas as notificações cadastradas.",
        "tags": [
          "Notifications"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de notificações encontrada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Notification"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Nenhuma notificação encontrada."
          }
        }
      }
    },
    "/notifications/{id}": {
      "delete": {
        "summary": "Excluir uma notificação",
        "description": "Essa rota exclui uma notificação pelo ID.",
        "tags": [
          "Notifications"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notificação excluída com sucesso."
          },
          "404": {
            "description": "Notificação não encontrada."
          }
        }
      }
    },
    "/requestedbooks": {
      "post": {
        "summary": "Criar um livro solicitado",
        "description": "Essa rota será responsável por criar um novo livro solicitado.",
        "tags": [
          "RequestedBooks"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestedBook"
              },
              "examples": {
                "RequestedBook": {
                  "value": {
                    "title": "Dom Quixote",
                    "description": "Um clássico da literatura espanhola.",
                    "gender": "Romance"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Livro solicitado criado com sucesso."
          },
          "400": {
            "description": "Erro de validação ou dados inválidos."
          },
          "500": {
            "description": "Erro interno no servidor."
          }
        }
      },
      "get": {
        "summary": "Listar todos os livros solicitados",
        "description": "Essa rota retorna todos os livros solicitados cadastrados.",
        "tags": [
          "RequestedBooks"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de livros solicitados encontrada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RequestedBook"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Nenhum livro solicitado encontrado."
          },
          "500": {
            "description": "Erro interno no servidor."
          }
        }
      }
    },
    "/requestedbooks/{id}": {
      "get": {
        "summary": "Buscar um livro solicitado pelo ID",
        "description": "Essa rota retorna os detalhes de um livro solicitado pelo ID.",
        "tags": [
          "RequestedBooks"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID do livro solicitado."
          }
        ],
        "responses": {
          "200": {
            "description": "Livro solicitado encontrado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestedBook"
                }
              }
            }
          },
          "404": {
            "description": "Livro solicitado não encontrado."
          },
          "500": {
            "description": "Erro interno no servidor."
          }
        }
      },
      "delete": {
        "summary": "Excluir um livro solicitado",
        "description": "Essa rota exclui um livro solicitado pelo ID.",
        "tags": [
          "RequestedBooks"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID do livro solicitado."
          }
        ],
        "responses": {
          "200": {
            "description": "Livro solicitado excluído com sucesso."
          },
          "404": {
            "description": "Livro solicitado não encontrado."
          },
          "500": {
            "description": "Erro interno no servidor."
          }
        }
      }
    },
    "/notificationAss": {
      "post": {
        "summary": "Criar uma notificação de assistência",
        "description": "Essa rota cria uma nova notificação de assistência.",
        "tags": [
          "NotificationAssistence"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationAssistence"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Notificação de assistência criada com sucesso."
          },
          "400": {
            "description": "Dados inválidos ou faltando."
          }
        }
      },
      "get": {
        "summary": "Listar todas as notificações de assistência",
        "description": "Essa rota retorna todas as notificações de assistência cadastradas.",
        "tags": [
          "NotificationAssistence"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de notificações de assistência encontrada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationAssistence"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Nenhuma notificação de assistência encontrada."
          }
        }
      }
    },
    "/eventos": {
      "post": {
        "summary": "Criar um evento",
        "description": "Essa rota cria um novo evento com ou sem capa e GIF.",
        "tags": [
          "Eventos"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "titulo": {
                    "type": "string",
                    "description": "Título do evento."
                  },
                  "categoria": {
                    "type": "string",
                    "description": "Categoria do evento."
                  },
                  "descricao": {
                    "type": "string",
                    "description": "Descrição do evento."
                  },
                  "data_evento": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Data e hora do evento."
                  },
                  "capa": {
                    "type": "string",
                    "format": "binary",
                    "description": "Arquivo de imagem da capa do evento (formatos suportados: JPEG, PNG)."
                  },
                  "gif": {
                    "type": "string",
                    "format": "binary",
                    "description": "Arquivo de GIF do evento (formato suportado: GIF)."
                  }
                },
                "required": [
                  "titulo",
                  "categoria",
                  "descricao",
                  "data_evento"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Evento criado com sucesso."
          },
          "400": {
            "description": "Dados inválidos ou faltando."
          },
          "500": {
            "description": "Erro interno no servidor."
          }
        }
      },
      "get": {
        "summary": "Listar todos os eventos",
        "description": "Essa rota retorna todos os eventos cadastrados.",
        "tags": [
          "Eventos"
        ],
        "responses": {
          "200": {
            "description": "Lista de eventos encontrada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Evento"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Nenhum evento encontrado."
          },
          "500": {
            "description": "Erro interno no servidor."
          }
        }
      }
    },
    "/eventos/{id}": {
      "get": {
        "summary": "Buscar um evento pelo ID",
        "description": "Essa rota retorna os detalhes de um evento pelo ID.",
        "tags": [
          "Eventos"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Evento encontrado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evento"
                }
              }
            }
          },
          "404": {
            "description": "Evento não encontrado."
          },
          "500": {
            "description": "Erro interno no servidor."
          }
        }
      },
      "put": {
        "summary": "Atualizar um evento",
        "description": "Essa rota atualiza as informações de um evento pelo ID.",
        "tags": [
          "Eventos"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "titulo": {
                    "type": "string",
                    "description": "Título do evento."
                  },
                  "categoria": {
                    "type": "string",
                    "description": "Categoria do evento."
                  },
                  "descricao": {
                    "type": "string",
                    "description": "Descrição do evento."
                  },
                  "data_evento": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Data e hora do evento."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Evento atualizado com sucesso."
          },
          "400": {
            "description": "Dados inválidos ou faltando."
          },
          "404": {
            "description": "Evento não encontrado."
          },
          "500": {
            "description": "Erro interno no servidor."
          }
        }
      },
      "delete": {
        "summary": "Excluir um evento",
        "description": "Essa rota exclui um evento pelo ID.",
        "tags": [
          "Eventos"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Evento excluído com sucesso."
          },
          "404": {
            "description": "Evento não encontrado."
          },
          "500": {
            "description": "Erro interno no servidor."
          }
        }
      }
    },
    "/eventos/{id}/addpicture": {
      "post": {
        "summary": "Adicionar ou atualizar capa e/ou GIF de um evento",
        "description": "Essa rota permite adicionar ou atualizar a capa e/ou o GIF de um evento.",
        "tags": [
          "Eventos"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "capa": {
                    "type": "string",
                    "format": "binary",
                    "description": "Arquivo de imagem da capa do evento (formatos suportados: JPEG, PNG)."
                  },
                  "gif": {
                    "type": "string",
                    "format": "binary",
                    "description": "Arquivo de GIF do evento (formato suportado: GIF)."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Capa e/ou GIF adicionados ou atualizados com sucesso."
          },
          "400": {
            "description": "Arquivo inválido ou não enviado."
          },
          "404": {
            "description": "Evento não encontrado."
          },
          "500": {
            "description": "Erro interno no servidor."
          }
        }
      }
    },
    "/notifications/books": {
      "get": {
        "summary": "Listar todas as notificações de livro",
        "description": "Essa rota retorna todas as notificações relacionadas a livros solicitados.",
        "tags": [
          "Notifications"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de notificações de livro encontrada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationRequestedBook"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Nenhuma notificação de livro encontrada."
          },
          "500": {
            "description": "Erro interno no servidor."
          }
        }
      }
    },
    "/books": {
      "post": {
        "summary": "Criar um livro",
        "description": "Essa rota cria um novo livro.",
        "tags": [
          "Books"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "titulo": {
                    "type": "string"
                  },
                  "subtitulo": {
                    "type": "string"
                  },
                  "descricao": {
                    "type": "string"
                  },
                  "autor": {
                    "type": "string"
                  },
                  "editora": {
                    "type": "string"
                  },
                  "edicao": {
                    "type": "string"
                  },
                  "ISBN13": {
                    "type": "string"
                  },
                  "ISBN10": {
                    "type": "string"
                  },
                  "publicacao": {
                    "type": "string",
                    "format": "date"
                  },
                  "paginas": {
                    "type": "integer"
                  },
                  "capitulos": {
                    "type": "integer"
                  },
                  "capa": {
                    "type": "string",
                    "format": "binary"
                  },
                  "banner": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": [
                  "titulo",
                  "descricao",
                  "autor",
                  "publicacao",
                  "capitulos",
                  "paginas"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Livro criado com sucesso."
          },
          "400": {
            "description": "Dados inválidos ou faltando."
          }
        }
      },
      "get": {
        "summary": "Listar todos os livros",
        "description": "Essa rota retorna todos os livros cadastrados.",
        "tags": [
          "Books"
        ],
        "responses": {
          "200": {
            "description": "Lista de livros encontrada com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Nenhum livro encontrado."
          }
        }
      }
    },
    "/books/{id}": {
      "delete": {
        "summary": "Excluir um livro",
        "description": "Essa rota exclui um livro pelo ID.",
        "tags": [
          "Books"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Livro excluído com sucesso."
          },
          "404": {
            "description": "Livro não encontrado."
          }
        }
      }
    },
    "/ebook": {
  "post": {
    "summary": "Criar um Ebook",
    "description": "Essa rota cria um novo Ebook com um arquivo associado.",
    "tags": ["Ebooks"],
    "requestBody": {
      "content": {
        "multipart/form-data": {
          "schema": {
            "type": "object",
            "properties": {
              "Ebook": {
                "type": "string",
                "format": "binary",
                "description": "Arquivo do Ebook (formatos suportados: PDF)."
              },
              "publicacao": {
                "type": "string",
                "format": "date",
                "description": "Data de publicação do Ebook."
              },
              "idLivro": {
                "type": "integer",
                "description": "Id do Book Relacionado."
              }
            },
            "required": ["Ebook"]
          }
        }
      }
    },
    "responses": {
      "201": {
        "description": "Ebook criado com sucesso."
      },
      "400": {
        "description": "Dados inválidos ou faltando."
      },
      "500": {
        "description": "Erro interno no servidor."
      }
    }
  },
  "get": {
    "summary": "Listar todos os Ebooks",
    "description": "Essa rota retorna todos os Ebooks cadastrados.",
    "tags": ["Ebooks"],
    "responses": {
      "200": {
        "description": "Lista de Ebooks encontrada com sucesso.",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EBook"
              }
            }
          }
        }
      },
      "404": {
        "description": "Nenhum Ebook encontrado."
      },
      "500": {
        "description": "Erro interno no servidor."
      }
    }
  }
},
"/ebook/{id}": {
  "patch": {
    "summary": "Atualizar um Ebook",
    "description": "Essa rota atualiza as informações de um Ebook pelo ID.",
    "tags": ["Ebooks"],
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      }
    ],
    "requestBody": {
      "content": {
        "multipart/form-data": {
          "schema": {
            "type": "object",
            "properties": {
              "Ebook": {
                "type": "string",
                "format": "binary",
                "description": "Arquivo do Ebook (formatos suportados: PDF)."
              },
              "publicacao": {
                "type": "string",
                "format": "date",
                "description": "Data de publicação do Ebook."
              }
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Ebook atualizado com sucesso."
      },
      "400": {
        "description": "Dados inválidos ou faltando."
      },
      "404": {
        "description": "Ebook não encontrado."
      },
      "500": {
        "description": "Erro interno no servidor."
      }
    }
  },
  "delete": {
    "summary": "Excluir um Ebook",
    "description": "Essa rota exclui um Ebook pelo ID.",
    "tags": ["Ebooks"],
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      }
    ],
    "responses": {
      "200": {
        "description": "Ebook excluído com sucesso."
      },
      "404": {
        "description": "Ebook não encontrado."
      },
      "500": {
        "description": "Erro interno no servidor."
      }
    }
  }
},
"/audiobook": {
  "post": {
    "summary": "Criar um Audiobook",
    "description": "Essa rota cria um novo Audiobook com um arquivo de áudio associado.",
    "tags": ["Audiobooks"],
    "requestBody": {
      "content": {
        "multipart/form-data": {
          "schema": {
            "type": "object",
            "properties": {
              "audioBook": {
                "type": "string",
                "format": "binary",
                "description": "Arquivo de áudio do Audiobook (formatos suportados: MP3)."
              },
              "publicacao": {
                "type": "string",
                "format": "date",
                "description": "Data de publicação do Audiobook."
              },
              "idLivro": {
                "type": "integer",
                "description": "Id do Book Relacionado."
              }
            },
            "required": ["audioBook"]
          }
        }
      }
    },
    "responses": {
      "201": {
        "description": "Audiobook criado com sucesso."
      },
      "400": {
        "description": "Dados inválidos ou faltando."
      },
      "500": {
        "description": "Erro interno no servidor."
      }
    }
  },
  "get": {
    "summary": "Listar todos os Audiobooks",
    "description": "Essa rota retorna todos os Audiobooks cadastrados.",
    "tags": ["Audiobooks"],
    "responses": {
      "200": {
        "description": "Lista de Audiobooks encontrada com sucesso.",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AudioBook"
              }
            }
          }
        }
      },
      "404": {
        "description": "Nenhum Audiobook encontrado."
      },
      "500": {
        "description": "Erro interno no servidor."
      }
    }
  }
},
"/audiobook/{id}": {
  "patch": {
    "summary": "Atualizar um Audiobook",
    "description": "Essa rota atualiza as informações de um Audiobook pelo ID.",
    "tags": ["Audiobooks"],
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      }
    ],
    "requestBody": {
      "content": {
        "multipart/form-data": {
          "schema": {
            "type": "object",
            "properties": {
              "audiobook": {
                "type": "string",
                "format": "binary",
                "description": "Arquivo de áudio do Audiobook (formatos suportados: MP3)."
              },
              "publicacao": {
                "type": "string",
                "format": "date",
                "description": "Data de publicação do Audiobook."
              }
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Audiobook atualizado com sucesso."
      },
      "400": {
        "description": "Dados inválidos ou faltando."
      },
      "404": {
        "description": "Audiobook não encontrado."
      },
      "500": {
        "description": "Erro interno no servidor."
      }
    }
  },
  "delete": {
    "summary": "Excluir um Audiobook",
    "description": "Essa rota exclui um Audiobook pelo ID.",
    "tags": ["Audiobooks"],
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      }
    ],
    "responses": {
      "200": {
        "description": "Audiobook excluído com sucesso."
      },
      "404": {
        "description": "Audiobook não encontrado."
      },
      "500": {
        "description": "Erro interno no servidor."
      }
    }
  }
}
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID único do usuário."
          },
          "name": {
            "type": "string",
            "description": "Nome completo do usuário."
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Endereço de e-mail do usuário."
          },
          "password": {
            "type": "string",
            "description": "Senha do usuário (armazenada de forma criptografada)."
          },
          "isDisabled": {
            "type": "boolean",
            "description": "Indica se o usuário possui alguma deficiência."
          },
          "idDisabled": {
            "type": "integer",
            "nullable": true,
            "description": "ID da deficiência associada ao usuário (se houver)."
          },
          "techAss": {
            "type": "string",
            "nullable": true,
            "description": "Tecnologia assistiva utilizada pelo usuário (se aplicável)."
          },
          "resetPasswordToken": {
            "type": "string",
            "nullable": true,
            "description": "Token para redefinição de senha."
          },
          "resetPasswordExpires": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Data de expiração do token de redefinição de senha."
          },
          "validToken": {
            "type": "string",
            "nullable": true,
            "description": "Token de autenticação válido."
          }
        },
        "required": [
          "name",
          "email",
          "password"
        ]
      },
      "Admin": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID único do administrador."
          },
          "name": {
            "type": "string",
            "description": "Nome completo do administrador."
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Endereço de e-mail do administrador."
          },
          "password": {
            "type": "string",
            "description": "Senha do administrador (armazenada de forma criptografada)."
          },
          "NIF": {
            "type": "string",
            "description": "Número de Identificação Fiscal (NIF) do administrador."
          },
          "id_AdminFoto": {
            "type": "integer",
            "nullable": true,
            "description": "ID da foto de perfil do administrador."
          },
          "resetPasswordToken": {
            "type": "string",
            "nullable": true,
            "description": "Token para redefinição de senha."
          },
          "resetPasswordExpires": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Data de expiração do token de redefinição de senha."
          },
          "validToken": {
            "type": "string",
            "nullable": true,
            "description": "Token de autenticação válido."
          }
        },
        "required": [
          "name",
          "email",
          "password"
        ]
      },
      "Disabled": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID único da deficiência."
          },
          "idDisabledTypes": {
            "type": "integer",
            "description": "ID do tipo de deficiência associada."
          },
          "name": {
            "type": "string",
            "description": "Nome da deficiência."
          }
        },
        "required": [
          "idDisabledTypes",
          "name"
        ]
      },
      "TypesDisabled": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID único do tipo de deficiência."
          },
          "name": {
            "type": "string",
            "description": "Nome do tipo de deficiência."
          }
        },
        "required": [
          "name"
        ]
      },
      "UserDisabled": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID único da associação entre usuário e deficiência."
          },
          "idUser": {
            "type": "integer",
            "description": "ID do usuário associado."
          },
          "idDisabled": {
            "type": "integer",
            "description": "ID da deficiência associada."
          }
        },
        "required": [
          "idUser",
          "idDisabled"
        ]
      },
      "Notification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID único da notificação."
          },
          "title": {
            "type": "string",
            "description": "Título da notificação."
          },
          "description": {
            "type": "string",
            "description": "Descrição da notificação."
          },
          "type": {
            "type": "string",
            "description": "Tipo da notificação (ex: info, alerta, etc.)."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Data de criação da notificação."
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Data de atualização da notificação."
          }
        },
        "required": [
          "title",
          "description",
          "type"
        ]
      },
      "RequestedBook": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID único do livro solicitado."
          },
          "title": {
            "type": "string",
            "description": "Título do livro solicitado."
          },
          "description": {
            "type": "string",
            "description": "Descrição do livro solicitado."
          },
          "gender": {
            "type": "string",
            "description": "Gênero do livro solicitado."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Data de criação do livro solicitado."
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Data de atualização do livro solicitado."
          }
        },
        "required": [
          "title",
          "description",
          "gender"
        ]
      },
      "NotificationAssistence": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID único da notificação de assistência."
          },
          "notificao_id": {
            "type": "integer",
            "description": "ID da notificação associada."
          },
          "user_id": {
            "type": "integer",
            "description": "ID do usuário associado."
          },
          "evento_id": {
            "type": "integer",
            "description": "ID do evento associado."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Data de criação da notificação de assistência."
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Data de atualização da notificação de assistência."
          }
        },
        "required": [
          "notificao_id",
          "user_id",
          "evento_id"
        ]
      },
      "NotificationRequestedBook": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID único da associação entre notificação e livro solicitado."
          },
          "idNotification": {
            "type": "integer",
            "description": "ID da notificação associada."
          },
          "idRequestedBook": {
            "type": "integer",
            "description": "ID do livro solicitado associado."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Data de criação da associação."
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Data de atualização da associação."
          }
        },
        "required": [
          "idNotification",
          "idRequestedBook"
        ]
      },
      "Evento": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID único do evento."
          },
          "titulo": {
            "type": "string",
            "description": "Título do evento."
          },
          "categoria": {
            "type": "string",
            "description": "Categoria do evento."
          },
          "descricao": {
            "type": "string",
            "description": "Descrição do evento."
          },
          "data_evento": {
            "type": "string",
            "format": "date-time",
            "description": "Data e hora do evento."
          },
          "id_capa": {
            "type": "integer",
            "nullable": true,
            "description": "ID da capa do evento."
          },
          "id_Gif": {
            "type": "integer",
            "nullable": true,
            "description": "ID do GIF do evento."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Data de criação do evento."
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Data de atualização do evento."
          }
        },
        "required": [
          "titulo",
          "categoria",
          "descricao",
          "data_evento"
        ]
      },
      "Book": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID único do livro."
          },
          "titulo": {
            "type": "string",
            "description": "Título do livro."
          },
          "subtitulo": {
            "type": "string",
            "nullable": true,
            "description": "Subtítulo do livro."
          },
          "descricao": {
            "type": "string",
            "description": "Descrição do livro."
          },
          "autor": {
            "type": "string",
            "description": "Autor do livro."
          },
          "editora": {
            "type": "string",
            "nullable": true,
            "description": "Editora do livro."
          },
          "edicao": {
            "type": "string",
            "nullable": true,
            "description": "Edição do livro."
          },
          "ISBN13": {
            "type": "string",
            "nullable": true,
            "description": "ISBN-13 do livro."
          },
          "ISBN10": {
            "type": "string",
            "nullable": true,
            "description": "ISBN-10 do livro."
          },
          "publicacao": {
            "type": "string",
            "format": "date",
            "description": "Data de publicação do livro."
          },
          "paginas": {
            "type": "integer",
            "description": "Número de páginas do livro."
          },
          "capitulos": {
            "type": "integer",
            "description": "Número de capítulos do livro."
          },
          "id_capa": {
            "type": "integer",
            "nullable": true,
            "description": "ID da capa do livro."
          },
          "id_banner": {
            "type": "integer",
            "nullable": true,
            "description": "ID do banner do livro."
          },
          "id_ebook": {
            "type": "integer",
            "nullable": true,
            "description": "ID do e-book associado ao livro."
          },
          "id_audiobook": {
            "type": "integer",
            "nullable": true,
            "description": "ID do áudio-livro associado ao livro."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Data de criação do livro."
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Data de atualização do livro."
          }
        },
        "required": [
          "titulo",
          "descricao",
          "autor",
          "publicacao",
          "paginas",
          "capitulos"
        ]
      },
      "EBook": {
  "type": "object",
  "properties": {
    "id": {
      "type": "integer",
      "description": "ID único do Ebook."
    },
    "id_arquivo": {
      "type": "integer",
      "nullable": true,
      "description": "ID do arquivo associado ao Ebook."
    },
    "publicacao": {
      "type": "string",
      "format": "date",
      "nullable": true,
      "description": "Data de publicação do Ebook."
    },
    "createdAt": {
      "type": "string",
      "format": "date-time",
      "description": "Data de criação do Ebook."
    },
    "updatedAt": {
      "type": "string",
      "format": "date-time",
      "description": "Data de atualização do Ebook."
    }
  }
},
"AudioBook": {
  "type": "object",
  "properties": {
    "id": {
      "type": "integer",
      "description": "ID único do Audiobook."
    },
    "id_arquivo": {
      "type": "integer",
      "nullable": true,
      "description": "ID do arquivo associado ao Audiobook."
    },
    "publicacao": {
      "type": "string",
      "format": "date",
      "nullable": true,
      "description": "Data de publicação do Audiobook."
    },
    "createdAt": {
      "type": "string",
      "format": "date-time",
      "description": "Data de criação do Audiobook."
    },
    "updatedAt": {
      "type": "string",
      "format": "date-time",
      "description": "Data de atualização do Audiobook."
    }
  }
}
    }
  }
}